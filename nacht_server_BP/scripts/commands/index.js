import { Logger } from '../utils/logger';
import addtag from './addtag';
import buy from './buy';
import buybase from './buybase';
import buyenchantedbook from './buyenchantedbook';
import cleardp from './cleardp';
import clonerotate from './clonerotate';
import clonerotatefiltered from './clonerotatefiltered';
import dice from './dice';
import _enum from './enum';
import fill from './fill';
import filldiagonal from './filldiagonal';
import filldiagonalsection from './filldiagonalsection';
import fixarea from './fixarea';
import gamemodeop from './gamemodeop';
import gamerule from './gamerule';
import getdp from './getdp';
import message from './message';
import messageop from './messageop';
import migrate from './migrate';
import outputdata from './outputdata';
import pray from './pray';
import registertptarget from './registertptarget';
import releasearea from './releasearea';
import renamedp from './renamedp';
import sell from './sell';
import sellindetail from './sellindetail';
import setdp from './setdp';
import setname from './setname';
import setsafezone from './setsafezone';
import setspawnpoint from './setspawnpoint';
import setunsafezone from './setunsafezone';
import showcameramovie from './showcameramovie';
import showgamerules from './showgamerules';
import tp from './tp';
import transfer from './transfer';
import version from './version';
import withdraw from './withdraw';
export default () => {
    Logger.log('Subscribing original commands...');
    _enum();
    addtag();
    buy();
    buybase();
    buyenchantedbook();
    cleardp();
    clonerotate();
    clonerotatefiltered();
    dice();
    fill();
    filldiagonal();
    filldiagonalsection();
    fixarea();
    gamemodeop();
    gamerule();
    getdp();
    migrate();
    message();
    messageop();
    outputdata();
    pray();
    registertptarget();
    releasearea();
    renamedp();
    sell();
    sellindetail();
    setdp();
    setname();
    setsafezone();
    setspawnpoint();
    setunsafezone();
    showcameramovie();
    showgamerules();
    tp();
    transfer();
    version();
    withdraw();
};
